问题描述：
气象监测应用：系统分三个部分，气象站（实际获取气象数据的物理装置）、WeatherData对象（追踪来自气象站的数据，并更新布告板）、布告板（显示目前天气状况给用户看）。
气象站物理装置由别人提供，我们要实现的是WeatherData对象以及布告板的更新。

WeatherData源文件中有：getTemperature(),getHumidity(),getPressure(),measurementsChanged().
    前三个方法分别是从气象站获取测量数据：温度，湿度和气压。而一旦气象测量更新，第四个方法就会被调用。

我们需要实现三个使用天气数据的布告板：“目前状况”、“气象统计”、“天气预报”，一旦WeatherData有新的测量，这些布告必须马上更新。
此系统必须可扩展，其他人可建立定制的布告板，用户可以随心所欲的添加或移除任何布告板。



观察者模式：
    按报社业务来理解：出版者+订阅者=观察者模式。
    出版者改称为“主题”（subject），订阅者改称为“观察者”（observer）。
    主题对象管理某些数据，当主题内的数据改变，就会通知观察者。观察者已经订阅（注册）主题以便在主题改变时能够收到更新。

    定义：观察者模式定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。

设计原则：
    4、为了交互对象之间的松耦合设计而努力。

    松耦合的设计之所以能让我们建立有弹性的OO系统，能够应对变化，是因为对象之间的互相依赖降到了最低。


气象站设计：
    首先要有主题接口，里面包含：注册观察者、删除观察者、通知观察者接口
    然后要有观察者接口，里面有update（）方法，在主题改变通知时，观察者做出改变。
    再有一个布告板的共同接口，里面有display（）方法，所有布告板只需要实现这个方法即可。
    然后WeatherData实现Subject接口，布告板实现观察者接口和布告板接口。
    具体代码见observeDesign包下。



现在是WeatherData像观察者推送数据，那么不是所有的观察者都需要WeatherData推送的所有数据，可能有的观察者只需要部分数据和部分状态。
那么，可不可以让观察者自己去“拉”取自己需要的数据呢？

Java提供了内置的观察者模式，那么使用Java API来实现观察者。代码见包observeDesign下的useJDK的包。